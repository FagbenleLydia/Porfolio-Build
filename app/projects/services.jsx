"use client";
import { useEffect, useState } from "react";
import { motion } from "framer-motion";

export const metadata = {
  title: "Services",
  description: "Generated by create next app",
};

export default function Services() {
  const sections = ["what-i-do", "ui-ux", "no-code", "product-strategy"];
  const [activeSection, setActiveSection] = useState("what-i-do");

  useEffect(() => {
    const handleScroll = () => {
      let found = false;
      sections.forEach((id) => {
        const section = document.getElementById(id);
        if (section) {
          const rect = section.getBoundingClientRect();
          if (!found && rect.top < window.innerHeight * 0.6 && rect.bottom > window.innerHeight * 0.4) {
            setActiveSection(id);
            found = true;
          }
        }
      });
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  return (
    <div className="">
      <div id="what-i-do" className="mt-[150px] px-12">
        <div className="text-white flex justify-between items-start gap-16 w-full">
          <div className="flex flex-col items-start w-full max-w-[1330px]">
            <div className="flex items-center space-x-4">
              <span className="w-3 h-3 bg-white rounded-full"></span>
              <span className="text-left uppercase text-lg">Services</span>
            </div>
            <motion.h1
              className="uppercase text-[80px] leading-tight mt-2"
              animate={{ color: activeSection === "what-i-do" ? "#FFFFFF" : "#B3B3B3" }}
              transition={{ duration: 0.5 }}
            >
              What I do
            </motion.h1>
            <Underline isActive={activeSection === "what-i-do"} />
          </div>
        </div>
      </div>

      <Section title="UI/UX Design" id="ui-ux" items1={["App Design", "Website Design", "Landing Page Design"]} items2={["Design Systems", "Wireframing", "Prototyping"]} activeSection={activeSection} setActiveSection={setActiveSection} />
      <Section title="No-code Dev" id="no-code" items1={["WordPress", "Framer", "Webflow"]} items2={["Design Systems", "Wireframing", "Prototyping"]} activeSection={activeSection} setActiveSection={setActiveSection} />
      <Section title="Product Strategy" id="product-strategy" items1={["App Design", "Website Design", "Landing Page Design"]} items2={["Design Systems", "Wireframing", "Prototyping"]} activeSection={activeSection} setActiveSection={setActiveSection} />
    </div>
  );
}
function Section({ title, id, items1, items2, activeSection, setActiveSection }) {
  return (
    <div
      id={id}
      className="flex flex-col px-12 w-full"
      onMouseEnter={() => setActiveSection(id)}
    >
      <div className="flex items-start justify-between w-full max-w-[1330px]">
        <motion.h1
          className="uppercase text-[61px] leading-tight mt-2"
          animate={{ color: activeSection === id ? "#FFFFFF" : "#B3B3B3" }}
          transition={{ duration: 0.5 }}
        >
          {title}
        </motion.h1>
        <div className="flex gap-x-32">
          <motion.ul
            className="space-y-2 text-[20px] w-[220px]"
            animate={{ color: activeSection === id ? "#FFFFFF" : "#B3B3B3" }}
            transition={{ duration: 0.5 }}
          >
            {items1.map((item, i) => (
              <li key={i}>{item}</li>
            ))}
          </motion.ul>
          <motion.ul
            className="space-y-2 text-[20px] w-[220px]"
            animate={{ color: activeSection === id ? "#FFFFFF" : "#B3B3B3" }}
            transition={{ duration: 0.5 }}
          >
            {items2.map((item, i) => (
              <li key={i}>{item}</li>
            ))}
          </motion.ul>
        </div>
      </div>
      <Underline isActive={activeSection === id} />
    </div>
  );
}

function Underline({ isActive }) {
  return (
    <motion.div
      className="border-t w-full max-w-[1330px] mt-8 mb-8"
      style={{ height: "3px" }}
      animate={{ backgroundColor: isActive ? "#FFFFFF" : "#000000" }}
      transition={{ duration: 0.6 }}
    />
  );
}
